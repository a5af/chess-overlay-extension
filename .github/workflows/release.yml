name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Build extension
        run: npm run build

      - name: Verify build output
        run: |
          echo "Build directory contents:"
          ls -lah dist/
          echo ""
          echo "Checking required files..."
          test -f dist/manifest.json || (echo "❌ manifest.json missing" && exit 1)
          echo "✓ manifest.json found"

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Create distribution package
        run: |
          cd dist
          zip -r ../squarewatch-v${{ steps.get_version.outputs.version }}.zip .
          cd ..
          echo "Package created:"
          ls -lh squarewatch-*.zip

      - name: Generate changelog
        id: changelog
        run: |
          echo "## What's Changed" > CHANGELOG.md
          echo "" >> CHANGELOG.md

          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$LAST_TAG" ]; then
            echo "Initial release" >> CHANGELOG.md
            git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
          else
            echo "Changes since $LAST_TAG:" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" >> CHANGELOG.md
          fi

          echo "" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## Installation" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "1. Download \`squarewatch-v${{ steps.get_version.outputs.version }}.zip\`" >> CHANGELOG.md
          echo "2. Extract the ZIP file" >> CHANGELOG.md
          echo "3. Open Chrome and go to \`chrome://extensions/\`" >> CHANGELOG.md
          echo "4. Enable **Developer mode**" >> CHANGELOG.md
          echo "5. Click **Load unpacked** and select the extracted folder" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "---" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$LAST_TAG...${{ steps.get_version.outputs.tag }}" >> CHANGELOG.md

          cat CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.tag }}
          body_path: CHANGELOG.md
          files: |
            squarewatch-v${{ steps.get_version.outputs.version }}.zip
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.version, 'beta') || contains(steps.get_version.outputs.version, 'alpha') || contains(steps.get_version.outputs.version, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-v${{ steps.get_version.outputs.version }}
          path: dist/
          retention-days: 90

      - name: Release summary
        run: |
          echo "🎉 Release v${{ steps.get_version.outputs.version }} created successfully!"
          echo ""
          echo "📦 Package: squarewatch-v${{ steps.get_version.outputs.version }}.zip"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.tag }}"
          echo ""
          echo "Next steps:"
          echo "  - Download the .zip from the release"
          echo "  - Upload to Chrome Web Store Developer Dashboard"
